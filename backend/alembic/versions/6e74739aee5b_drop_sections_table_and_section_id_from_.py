"""Drop sections table and section_id from cards

Revision ID: 6e74739aee5b
Revises: aa370422e2d9
Create Date: 2025-07-18 14:55:16.984025

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6e74739aee5b'
down_revision: Union[str, Sequence[str], None] = 'aa370422e2d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('cards_section_id_fkey', 'cards', type_='foreignkey')
    op.drop_column('cards', 'section_id')
    op.drop_index('ix_sections_id', table_name='sections')
    op.drop_table('sections')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cards', sa.Column('section_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('cards_section_id_fkey'), 'cards', 'sections', ['section_id'], ['id'])
    op.create_table('sections',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('x', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('y', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('width', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('height', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('sections_project_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('sections_pkey'))
    )
    op.create_index(op.f('ix_sections_id'), 'sections', ['id'], unique=False)
    # ### end Alembic commands ###
